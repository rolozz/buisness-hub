plugins {
    id 'jacoco'
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'checkstyle'
}

// Apply Checkstyle configuration from the specified file
apply from: "${project.projectDir.parentFile}/config/checkstyle/checkstyle.gradle"

jacoco {
    toolVersion = "0.8.7"
    reportsDirectory = layout.buildDirectory.dir("reports/jacoco")
}

group = 'business.hub'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

bootJar {
    mainClass = 'business.hub.EventStreamCloudApplication'
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
        resources {
            srcDirs = ['src/main/resources']
        }
    }
}

repositories {
    mavenCentral()

}

ext {
    set('springBootVersion', "3.2.3")
    set('springDependencyManagementVersion', "1.1.4")
    set('lombokVersion', "1.18.20")
    set('springDocVersion', "2.1.0")
}

dependencies {

    // Spring Boot Starters
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-web"

    // Kafka
    implementation "org.springframework.kafka:spring-kafka"
    implementation "org.apache.kafka:kafka-streams"

    // JSON Processing
    implementation "com.fasterxml.jackson.core:jackson-databind"

    // Lombok
    compileOnly "org.projectlombok:lombok"
    annotationProcessor "org.projectlombok:lombok"

    // PostgreSQL
    runtimeOnly "org.postgresql:postgresql"

    // SpringDoc
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springDocVersion}"

    // Development tools
    developmentOnly "org.springframework.boot:spring-boot-devtools"

    // Testing
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.springframework.kafka:spring-kafka-test"
    testImplementation "org.apache.kafka:kafka-streams-test-utils"
    testImplementation "org.testcontainers:junit-jupiter"
    testImplementation "org.testcontainers:testcontainers"
    testImplementation "org.testcontainers:kafka"
    testImplementation "org.testcontainers:postgresql"
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.00
            }
        }
    }
}

check.dependsOn jacocoTestCoverageVerification

tasks.named('test') {
    useJUnitPlatform()
}
