plugins {
    id 'jacoco'
    id 'java'
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'checkstyle'
    id "org.owasp.dependencycheck" version "9.0.9"
}

// Apply Checkstyle configuration from the specified file
apply from: "${project.projectDir.parentFile}/config/checkstyle/checkstyle.gradle"

jacoco {
    toolVersion = "0.8.7"
    reportsDirectory = layout.buildDirectory.dir("reports/jacoco")
}

dependencyCheck {
    autoUpdate = true
    format = 'HTML'
    check.dependsOn dependencyCheckAnalyze
}

group = 'bussines.hub'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
}

ext {
    set('springCloudVersion', "2023.0.0-RC1")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'jakarta.mail:jakarta.mail-api:2.0.1'

    // Spring Boot dependencies
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // Spring Cloud dependencies
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

    // Kafka dependencies
    implementation 'org.springframework.kafka:spring-kafka'

    // SpringDoc OpenAPI
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'

    // Lombok for reducing boilerplate code
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // PostgreSQL JDBC driver
    runtimeOnly 'org.postgresql:postgresql'

    // Test dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testImplementation 'org.mockito:mockito-core:4.0.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:4.0.0'

    // Добавленные зависимости
    implementation 'jakarta.validation:jakarta.validation-api:3.1.0-M1'
    implementation 'org.springframework.cloud:spring-cloud-stream'
    implementation 'org.springframework.cloud:spring-cloud-stream-binder-kafka'
    implementation 'org.springframework.cloud:spring-cloud-starter-stream-kafka'
    implementation 'org.springframework.cloud:spring-cloud-stream-test-support'
    implementation 'org.springframework.cloud:spring-cloud-stream-starters:1.0.3.RELEASE'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.00
            }
        }
    }
}

check.dependsOn jacocoTestCoverageVerification

tasks.named('test') {
    useJUnitPlatform()
}
